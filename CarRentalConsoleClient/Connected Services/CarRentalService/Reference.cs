//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarRentalConsoleClient.CarRentalService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarInputs", Namespace="http://schemas.datacontract.org/2004/07/CarRentalService")]
    [System.SerializableAttribute()]
    public partial class CarInputs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string brandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string modelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string registrationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int yearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string brand {
            get {
                return this.brandField;
            }
            set {
                if ((object.ReferenceEquals(this.brandField, value) != true)) {
                    this.brandField = value;
                    this.RaisePropertyChanged("brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string model {
            get {
                return this.modelField;
            }
            set {
                if ((object.ReferenceEquals(this.modelField, value) != true)) {
                    this.modelField = value;
                    this.RaisePropertyChanged("model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string registrationNumber {
            get {
                return this.registrationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.registrationNumberField, value) != true)) {
                    this.registrationNumberField = value;
                    this.RaisePropertyChanged("registrationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int year {
            get {
                return this.yearField;
            }
            set {
                if ((this.yearField.Equals(value) != true)) {
                    this.yearField = value;
                    this.RaisePropertyChanged("year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerInputs", Namespace="http://schemas.datacontract.org/2004/07/CarRentalService")]
    [System.SerializableAttribute()]
    public partial class CustomerInputs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string telephoneNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string telephoneNumber {
            get {
                return this.telephoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.telephoneNumberField, value) != true)) {
                    this.telephoneNumberField = value;
                    this.RaisePropertyChanged("telephoneNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangeCustomerInputs", Namespace="http://schemas.datacontract.org/2004/07/CarRentalService")]
    [System.SerializableAttribute()]
    public partial class ChangeCustomerInputs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int customerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Storage.Customer newDetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int customerId {
            get {
                return this.customerIdField;
            }
            set {
                if ((this.customerIdField.Equals(value) != true)) {
                    this.customerIdField = value;
                    this.RaisePropertyChanged("customerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Storage.Customer newDetails {
            get {
                return this.newDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.newDetailsField, value) != true)) {
                    this.newDetailsField = value;
                    this.RaisePropertyChanged("newDetails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DateInputs", Namespace="http://schemas.datacontract.org/2004/07/CarRentalService")]
    [System.SerializableAttribute()]
    public partial class DateInputs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime fromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime toDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime fromDate {
            get {
                return this.fromDateField;
            }
            set {
                if ((this.fromDateField.Equals(value) != true)) {
                    this.fromDateField = value;
                    this.RaisePropertyChanged("fromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime toDate {
            get {
                return this.toDateField;
            }
            set {
                if ((this.toDateField.Equals(value) != true)) {
                    this.toDateField = value;
                    this.RaisePropertyChanged("toDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookingInputs", Namespace="http://schemas.datacontract.org/2004/07/CarRentalService")]
    [System.SerializableAttribute()]
    public partial class BookingInputs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int carIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int customerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime endTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime startTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int carId {
            get {
                return this.carIdField;
            }
            set {
                if ((this.carIdField.Equals(value) != true)) {
                    this.carIdField = value;
                    this.RaisePropertyChanged("carId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int customerId {
            get {
                return this.customerIdField;
            }
            set {
                if ((this.customerIdField.Equals(value) != true)) {
                    this.customerIdField = value;
                    this.RaisePropertyChanged("customerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime endTime {
            get {
                return this.endTimeField;
            }
            set {
                if ((this.endTimeField.Equals(value) != true)) {
                    this.endTimeField = value;
                    this.RaisePropertyChanged("endTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                if ((this.startTimeField.Equals(value) != true)) {
                    this.startTimeField = value;
                    this.RaisePropertyChanged("startTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CarRentalService.ICarRentalService")]
    public interface ICarRentalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/GetCars", ReplyAction="http://tempuri.org/ICarRentalService/GetCarsResponse")]
        Storage.Car[] GetCars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/GetCars", ReplyAction="http://tempuri.org/ICarRentalService/GetCarsResponse")]
        System.Threading.Tasks.Task<Storage.Car[]> GetCarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/GetCustomers", ReplyAction="http://tempuri.org/ICarRentalService/GetCustomersResponse")]
        Storage.Customer[] GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/GetCustomers", ReplyAction="http://tempuri.org/ICarRentalService/GetCustomersResponse")]
        System.Threading.Tasks.Task<Storage.Customer[]> GetCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/GetBookings", ReplyAction="http://tempuri.org/ICarRentalService/GetBookingsResponse")]
        Storage.Booking[] GetBookings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/GetBookings", ReplyAction="http://tempuri.org/ICarRentalService/GetBookingsResponse")]
        System.Threading.Tasks.Task<Storage.Booking[]> GetBookingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/GetActiveBookings", ReplyAction="http://tempuri.org/ICarRentalService/GetActiveBookingsResponse")]
        Storage.Booking[] GetActiveBookings(bool isStarted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/GetActiveBookings", ReplyAction="http://tempuri.org/ICarRentalService/GetActiveBookingsResponse")]
        System.Threading.Tasks.Task<Storage.Booking[]> GetActiveBookingsAsync(bool isStarted);
        
        // CODEGEN: Generating message contract since the operation AddCar is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/AddCar", ReplyAction="http://tempuri.org/ICarRentalService/AddCarResponse")]
        CarRentalConsoleClient.CarRentalService.AddCarResponse AddCar(CarRentalConsoleClient.CarRentalService.CarRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/AddCar", ReplyAction="http://tempuri.org/ICarRentalService/AddCarResponse")]
        System.Threading.Tasks.Task<CarRentalConsoleClient.CarRentalService.AddCarResponse> AddCarAsync(CarRentalConsoleClient.CarRentalService.CarRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/RemoveCar", ReplyAction="http://tempuri.org/ICarRentalService/RemoveCarResponse")]
        void RemoveCar(int carId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/RemoveCar", ReplyAction="http://tempuri.org/ICarRentalService/RemoveCarResponse")]
        System.Threading.Tasks.Task RemoveCarAsync(int carId);
        
        // CODEGEN: Generating message contract since the operation AddCustomer is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/AddCustomer", ReplyAction="http://tempuri.org/ICarRentalService/AddCustomerResponse")]
        CarRentalConsoleClient.CarRentalService.AddCustomerResponse AddCustomer(CarRentalConsoleClient.CarRentalService.CustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/AddCustomer", ReplyAction="http://tempuri.org/ICarRentalService/AddCustomerResponse")]
        System.Threading.Tasks.Task<CarRentalConsoleClient.CarRentalService.AddCustomerResponse> AddCustomerAsync(CarRentalConsoleClient.CarRentalService.CustomerRequest request);
        
        // CODEGEN: Generating message contract since the operation ChangeCustomer is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/ChangeCustomer", ReplyAction="http://tempuri.org/ICarRentalService/ChangeCustomerResponse")]
        CarRentalConsoleClient.CarRentalService.ChangeCustomerResponse ChangeCustomer(CarRentalConsoleClient.CarRentalService.ChangeCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/ChangeCustomer", ReplyAction="http://tempuri.org/ICarRentalService/ChangeCustomerResponse")]
        System.Threading.Tasks.Task<CarRentalConsoleClient.CarRentalService.ChangeCustomerResponse> ChangeCustomerAsync(CarRentalConsoleClient.CarRentalService.ChangeCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/RemoveCustomer", ReplyAction="http://tempuri.org/ICarRentalService/RemoveCustomerResponse")]
        void RemoveCustomer(int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/RemoveCustomer", ReplyAction="http://tempuri.org/ICarRentalService/RemoveCustomerResponse")]
        System.Threading.Tasks.Task RemoveCustomerAsync(int customerId);
        
        // CODEGEN: Generating message contract since the wrapper name (AvailableCarsRequest) of message AvailableCarsRequest does not match the default value (GetAvailableCars)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/GetAvailableCars", ReplyAction="http://tempuri.org/ICarRentalService/GetAvailableCarsResponse")]
        CarRentalConsoleClient.CarRentalService.AvailableCarsResponse GetAvailableCars(CarRentalConsoleClient.CarRentalService.AvailableCarsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/GetAvailableCars", ReplyAction="http://tempuri.org/ICarRentalService/GetAvailableCarsResponse")]
        System.Threading.Tasks.Task<CarRentalConsoleClient.CarRentalService.AvailableCarsResponse> GetAvailableCarsAsync(CarRentalConsoleClient.CarRentalService.AvailableCarsRequest request);
        
        // CODEGEN: Generating message contract since the operation CreateBooking is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/CreateBooking", ReplyAction="http://tempuri.org/ICarRentalService/CreateBookingResponse")]
        CarRentalConsoleClient.CarRentalService.CreateBookingResponse CreateBooking(CarRentalConsoleClient.CarRentalService.BookingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/CreateBooking", ReplyAction="http://tempuri.org/ICarRentalService/CreateBookingResponse")]
        System.Threading.Tasks.Task<CarRentalConsoleClient.CarRentalService.CreateBookingResponse> CreateBookingAsync(CarRentalConsoleClient.CarRentalService.BookingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/RemoveBooking", ReplyAction="http://tempuri.org/ICarRentalService/RemoveBookingResponse")]
        void RemoveBooking(int bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/RemoveBooking", ReplyAction="http://tempuri.org/ICarRentalService/RemoveBookingResponse")]
        System.Threading.Tasks.Task RemoveBookingAsync(int bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/ReturnCar", ReplyAction="http://tempuri.org/ICarRentalService/ReturnCarResponse")]
        void ReturnCar(int bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/ReturnCar", ReplyAction="http://tempuri.org/ICarRentalService/ReturnCarResponse")]
        System.Threading.Tasks.Task ReturnCarAsync(int bookingId);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CarRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CarRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public CarRentalConsoleClient.CarRentalService.CarInputs inputs;
        
        public CarRequest() {
        }
        
        public CarRequest(string userId, CarRentalConsoleClient.CarRentalService.CarInputs inputs) {
            this.userId = userId;
            this.inputs = inputs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddCarResponse {
        
        public AddCarResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CustomerRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CustomerRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public CarRentalConsoleClient.CarRentalService.CustomerInputs inputs;
        
        public CustomerRequest() {
        }
        
        public CustomerRequest(string userId, CarRentalConsoleClient.CarRentalService.CustomerInputs inputs) {
            this.userId = userId;
            this.inputs = inputs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddCustomerResponse {
        
        public AddCustomerResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCustomerRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ChangeCustomerRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public CarRentalConsoleClient.CarRentalService.ChangeCustomerInputs inputs;
        
        public ChangeCustomerRequest() {
        }
        
        public ChangeCustomerRequest(string userId, CarRentalConsoleClient.CarRentalService.ChangeCustomerInputs inputs) {
            this.userId = userId;
            this.inputs = inputs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeCustomerResponse {
        
        public ChangeCustomerResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AvailableCarsRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AvailableCarsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public CarRentalConsoleClient.CarRentalService.DateInputs inputs;
        
        public AvailableCarsRequest() {
        }
        
        public AvailableCarsRequest(string userId, CarRentalConsoleClient.CarRentalService.DateInputs inputs) {
            this.userId = userId;
            this.inputs = inputs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AvailableCarsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AvailableCarsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Storage.Car[] result;
        
        public AvailableCarsResponse() {
        }
        
        public AvailableCarsResponse(Storage.Car[] result) {
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BookingRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BookingRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public CarRentalConsoleClient.CarRentalService.BookingInputs inputs;
        
        public BookingRequest() {
        }
        
        public BookingRequest(string userId, CarRentalConsoleClient.CarRentalService.BookingInputs inputs) {
            this.userId = userId;
            this.inputs = inputs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateBookingResponse {
        
        public CreateBookingResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICarRentalServiceChannel : CarRentalConsoleClient.CarRentalService.ICarRentalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarRentalServiceClient : System.ServiceModel.ClientBase<CarRentalConsoleClient.CarRentalService.ICarRentalService>, CarRentalConsoleClient.CarRentalService.ICarRentalService {
        
        public CarRentalServiceClient() {
        }
        
        public CarRentalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CarRentalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarRentalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarRentalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Storage.Car[] GetCars() {
            return base.Channel.GetCars();
        }
        
        public System.Threading.Tasks.Task<Storage.Car[]> GetCarsAsync() {
            return base.Channel.GetCarsAsync();
        }
        
        public Storage.Customer[] GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        public System.Threading.Tasks.Task<Storage.Customer[]> GetCustomersAsync() {
            return base.Channel.GetCustomersAsync();
        }
        
        public Storage.Booking[] GetBookings() {
            return base.Channel.GetBookings();
        }
        
        public System.Threading.Tasks.Task<Storage.Booking[]> GetBookingsAsync() {
            return base.Channel.GetBookingsAsync();
        }
        
        public Storage.Booking[] GetActiveBookings(bool isStarted) {
            return base.Channel.GetActiveBookings(isStarted);
        }
        
        public System.Threading.Tasks.Task<Storage.Booking[]> GetActiveBookingsAsync(bool isStarted) {
            return base.Channel.GetActiveBookingsAsync(isStarted);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CarRentalConsoleClient.CarRentalService.AddCarResponse CarRentalConsoleClient.CarRentalService.ICarRentalService.AddCar(CarRentalConsoleClient.CarRentalService.CarRequest request) {
            return base.Channel.AddCar(request);
        }
        
        public void AddCar(string userId, CarRentalConsoleClient.CarRentalService.CarInputs inputs) {
            CarRentalConsoleClient.CarRentalService.CarRequest inValue = new CarRentalConsoleClient.CarRentalService.CarRequest();
            inValue.userId = userId;
            inValue.inputs = inputs;
            CarRentalConsoleClient.CarRentalService.AddCarResponse retVal = ((CarRentalConsoleClient.CarRentalService.ICarRentalService)(this)).AddCar(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CarRentalConsoleClient.CarRentalService.AddCarResponse> CarRentalConsoleClient.CarRentalService.ICarRentalService.AddCarAsync(CarRentalConsoleClient.CarRentalService.CarRequest request) {
            return base.Channel.AddCarAsync(request);
        }
        
        public System.Threading.Tasks.Task<CarRentalConsoleClient.CarRentalService.AddCarResponse> AddCarAsync(string userId, CarRentalConsoleClient.CarRentalService.CarInputs inputs) {
            CarRentalConsoleClient.CarRentalService.CarRequest inValue = new CarRentalConsoleClient.CarRentalService.CarRequest();
            inValue.userId = userId;
            inValue.inputs = inputs;
            return ((CarRentalConsoleClient.CarRentalService.ICarRentalService)(this)).AddCarAsync(inValue);
        }
        
        public void RemoveCar(int carId) {
            base.Channel.RemoveCar(carId);
        }
        
        public System.Threading.Tasks.Task RemoveCarAsync(int carId) {
            return base.Channel.RemoveCarAsync(carId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CarRentalConsoleClient.CarRentalService.AddCustomerResponse CarRentalConsoleClient.CarRentalService.ICarRentalService.AddCustomer(CarRentalConsoleClient.CarRentalService.CustomerRequest request) {
            return base.Channel.AddCustomer(request);
        }
        
        public void AddCustomer(string userId, CarRentalConsoleClient.CarRentalService.CustomerInputs inputs) {
            CarRentalConsoleClient.CarRentalService.CustomerRequest inValue = new CarRentalConsoleClient.CarRentalService.CustomerRequest();
            inValue.userId = userId;
            inValue.inputs = inputs;
            CarRentalConsoleClient.CarRentalService.AddCustomerResponse retVal = ((CarRentalConsoleClient.CarRentalService.ICarRentalService)(this)).AddCustomer(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CarRentalConsoleClient.CarRentalService.AddCustomerResponse> CarRentalConsoleClient.CarRentalService.ICarRentalService.AddCustomerAsync(CarRentalConsoleClient.CarRentalService.CustomerRequest request) {
            return base.Channel.AddCustomerAsync(request);
        }
        
        public System.Threading.Tasks.Task<CarRentalConsoleClient.CarRentalService.AddCustomerResponse> AddCustomerAsync(string userId, CarRentalConsoleClient.CarRentalService.CustomerInputs inputs) {
            CarRentalConsoleClient.CarRentalService.CustomerRequest inValue = new CarRentalConsoleClient.CarRentalService.CustomerRequest();
            inValue.userId = userId;
            inValue.inputs = inputs;
            return ((CarRentalConsoleClient.CarRentalService.ICarRentalService)(this)).AddCustomerAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CarRentalConsoleClient.CarRentalService.ChangeCustomerResponse CarRentalConsoleClient.CarRentalService.ICarRentalService.ChangeCustomer(CarRentalConsoleClient.CarRentalService.ChangeCustomerRequest request) {
            return base.Channel.ChangeCustomer(request);
        }
        
        public void ChangeCustomer(string userId, CarRentalConsoleClient.CarRentalService.ChangeCustomerInputs inputs) {
            CarRentalConsoleClient.CarRentalService.ChangeCustomerRequest inValue = new CarRentalConsoleClient.CarRentalService.ChangeCustomerRequest();
            inValue.userId = userId;
            inValue.inputs = inputs;
            CarRentalConsoleClient.CarRentalService.ChangeCustomerResponse retVal = ((CarRentalConsoleClient.CarRentalService.ICarRentalService)(this)).ChangeCustomer(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CarRentalConsoleClient.CarRentalService.ChangeCustomerResponse> CarRentalConsoleClient.CarRentalService.ICarRentalService.ChangeCustomerAsync(CarRentalConsoleClient.CarRentalService.ChangeCustomerRequest request) {
            return base.Channel.ChangeCustomerAsync(request);
        }
        
        public System.Threading.Tasks.Task<CarRentalConsoleClient.CarRentalService.ChangeCustomerResponse> ChangeCustomerAsync(string userId, CarRentalConsoleClient.CarRentalService.ChangeCustomerInputs inputs) {
            CarRentalConsoleClient.CarRentalService.ChangeCustomerRequest inValue = new CarRentalConsoleClient.CarRentalService.ChangeCustomerRequest();
            inValue.userId = userId;
            inValue.inputs = inputs;
            return ((CarRentalConsoleClient.CarRentalService.ICarRentalService)(this)).ChangeCustomerAsync(inValue);
        }
        
        public void RemoveCustomer(int customerId) {
            base.Channel.RemoveCustomer(customerId);
        }
        
        public System.Threading.Tasks.Task RemoveCustomerAsync(int customerId) {
            return base.Channel.RemoveCustomerAsync(customerId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CarRentalConsoleClient.CarRentalService.AvailableCarsResponse CarRentalConsoleClient.CarRentalService.ICarRentalService.GetAvailableCars(CarRentalConsoleClient.CarRentalService.AvailableCarsRequest request) {
            return base.Channel.GetAvailableCars(request);
        }
        
        public Storage.Car[] GetAvailableCars(string userId, CarRentalConsoleClient.CarRentalService.DateInputs inputs) {
            CarRentalConsoleClient.CarRentalService.AvailableCarsRequest inValue = new CarRentalConsoleClient.CarRentalService.AvailableCarsRequest();
            inValue.userId = userId;
            inValue.inputs = inputs;
            CarRentalConsoleClient.CarRentalService.AvailableCarsResponse retVal = ((CarRentalConsoleClient.CarRentalService.ICarRentalService)(this)).GetAvailableCars(inValue);
            return retVal.result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CarRentalConsoleClient.CarRentalService.AvailableCarsResponse> CarRentalConsoleClient.CarRentalService.ICarRentalService.GetAvailableCarsAsync(CarRentalConsoleClient.CarRentalService.AvailableCarsRequest request) {
            return base.Channel.GetAvailableCarsAsync(request);
        }
        
        public System.Threading.Tasks.Task<CarRentalConsoleClient.CarRentalService.AvailableCarsResponse> GetAvailableCarsAsync(string userId, CarRentalConsoleClient.CarRentalService.DateInputs inputs) {
            CarRentalConsoleClient.CarRentalService.AvailableCarsRequest inValue = new CarRentalConsoleClient.CarRentalService.AvailableCarsRequest();
            inValue.userId = userId;
            inValue.inputs = inputs;
            return ((CarRentalConsoleClient.CarRentalService.ICarRentalService)(this)).GetAvailableCarsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CarRentalConsoleClient.CarRentalService.CreateBookingResponse CarRentalConsoleClient.CarRentalService.ICarRentalService.CreateBooking(CarRentalConsoleClient.CarRentalService.BookingRequest request) {
            return base.Channel.CreateBooking(request);
        }
        
        public void CreateBooking(string userId, CarRentalConsoleClient.CarRentalService.BookingInputs inputs) {
            CarRentalConsoleClient.CarRentalService.BookingRequest inValue = new CarRentalConsoleClient.CarRentalService.BookingRequest();
            inValue.userId = userId;
            inValue.inputs = inputs;
            CarRentalConsoleClient.CarRentalService.CreateBookingResponse retVal = ((CarRentalConsoleClient.CarRentalService.ICarRentalService)(this)).CreateBooking(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CarRentalConsoleClient.CarRentalService.CreateBookingResponse> CarRentalConsoleClient.CarRentalService.ICarRentalService.CreateBookingAsync(CarRentalConsoleClient.CarRentalService.BookingRequest request) {
            return base.Channel.CreateBookingAsync(request);
        }
        
        public System.Threading.Tasks.Task<CarRentalConsoleClient.CarRentalService.CreateBookingResponse> CreateBookingAsync(string userId, CarRentalConsoleClient.CarRentalService.BookingInputs inputs) {
            CarRentalConsoleClient.CarRentalService.BookingRequest inValue = new CarRentalConsoleClient.CarRentalService.BookingRequest();
            inValue.userId = userId;
            inValue.inputs = inputs;
            return ((CarRentalConsoleClient.CarRentalService.ICarRentalService)(this)).CreateBookingAsync(inValue);
        }
        
        public void RemoveBooking(int bookingId) {
            base.Channel.RemoveBooking(bookingId);
        }
        
        public System.Threading.Tasks.Task RemoveBookingAsync(int bookingId) {
            return base.Channel.RemoveBookingAsync(bookingId);
        }
        
        public void ReturnCar(int bookingId) {
            base.Channel.ReturnCar(bookingId);
        }
        
        public System.Threading.Tasks.Task ReturnCarAsync(int bookingId) {
            return base.Channel.ReturnCarAsync(bookingId);
        }
    }
}
